-- ANTI AFK
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

-- Variables
getgenv().haveQuest = false
getgenv().toolName = nil
getgenv().TARGETMOB = ""
getgenv().TARGETQUEST = ""
getgenv().Noclipping = nil
plr = game.Players.LocalPlayer
plrName = plr.Name
getgenv().speed = 150 -- set this lower to make it slower
getgenv().haveVelo = false
local Imput = game:GetService("UserInputService")
local Plr = game.Players.LocalPlayer

wait = task.wait

function Notif(TitleMsg, Message)
    game.StarterGui:SetCore("SendNotification", {
        Title = TitleMsg,
        Text = Message,
        Duration = 3 -- how long the notification should in secounds
    })
end

function To(position)
    Chr = Plr.Character
    if Chr ~= nil then
        ts = game:GetService("TweenService")
        char = game.Players.LocalPlayer.Character
        hm = char.HumanoidRootPart
        dist = (hm.Position - position).magnitude
        tweenspeed = dist / tonumber(speed)
        ti = TweenInfo.new(tonumber(tweenspeed), Enum.EasingStyle.Linear)
        tp = {
            CFrame = CFrame.new(position)
        }

        ts:Create(hm, ti, tp):Play()

        local bv = Instance.new("BodyVelocity")
        bv.Parent = hm
        bv.MaxForce = Vector3.new(100000, 100000, 100000)
        bv.Velocity = Vector3.new(0, 0, 0)
        wait(tonumber(tweenspeed))

        if game:GetService("Workspace")[plrName].HumanoidRootPart:FindFirstChild('BodyGyro') == nil and isOnAutoFarm then
            haveVelo = false
        end

        if haveVelo == false then
            local BodyGyro = Instance.new('BodyGyro', hm)
            BodyGyro.P = 100000
            BodyGyro.maxTorque = Vector3.new(100000, 100000, 100000)
            BodyGyro.CFrame = CFrame.new(BodyGyro.Parent.Position, position * Vector3.new(0, 30, 0))
            haveVelo = true
        end
    end
end

local DiscordLib = loadstring(
    game:HttpGet "https://raw.githubusercontent.com/dawid-scripts/UI-Libs/main/discord%20lib.txt")()

local win = DiscordLib:Window("Stands Online")

local serv = win:Server("Main", "http://www.roblox.com/asset/?id=6031075938")

local sldrs = serv:Channel("Set TP Speed")

local sldr = sldrs:Slider("Teleport Speed (Recommended 150 for TPing Spawned Items)", 100, 250, 90, function(SPEEEEEED)
    speed = SPEEEEEED
end)

local manual = serv:Channel("Manual Stand Changer")

manual:Toggle("Ignore Rokakaka Fruit", false, function(IKF)
    getgenv().IgnoreIKF = IKF
end)

manual:Toggle("Ignore Stand Arrow", false, function(ISA)
    getgenv().IgnoreISA = ISA
end)

manual:Toggle("Ignore Steel Ball", false, function(ISB)
    getgenv().IgnoreISB = ISB
end)

manual:Button("Get all Spawned Items", function()

    for i, v in pairs(game.Workspace:GetChildren()) do
        if v:FindFirstChildOfClass('Tool') and v:FindFirstChildOfClass('Humanoid') == nil then
            toolName = v:FindFirstChildOfClass('Tool').Name

            if toolName == "Rokakaka Fruit" and IgnoreIKF then
            elseif toolName == "Stand Arrow" and IgnoreISA then
            elseif toolName == "Steel Ball" and IgnoreISB then
            else
                positionPart = v[toolName].Handle.Position
                To(v[toolName].Handle.Position)
                wait(1)
            end

        end
    end

    if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
        for i, v in pairs(game:GetService("Workspace")[plrName].HumanoidRootPart:GetChildren()) do
            if v:IsA('BodyVelocity') or v:IsA('BodyGyro') then
                v:Destroy()
            end
        end
    end

end)

manual:Seperator()

manual:Label("NOTES:")
manual:Label("- Use 'Purchasable' if there's no item you're looking for")
manual:Label("- Don't spam the buttons")
manual:Label("- Press enter when finish typing in 'Purchasable'")
manual:Seperator()

local purchasable = manual:Dropdown("Item to USE", {}, function(rawr)
    getgenv().Item = rawr
end)

local purchasableItems = {}

for i, v in pairs(game:GetService("Workspace").Purchasable:GetChildren()) do
    if v:IsA('Model') then
        if v.Name == 'Hamon Headband' or v.Name == 'Face Arrow' or v.Name == 'Steel Ball' or v.Name == 'Diet Roka-Cola' or
            v.Name == 'Roka-Cola Zero' or v.Name == 'Roka-Cola' or v.Name == 'Heavenly Diary' or v.Name ==
            'Rokakaka Fruit' or v.Name == 'Vampire Mask' then
        else
            table.insert(purchasableItems, v.Name)
            purchasable:Add(v.Name)
        end
    end
end

manual:Textbox("Purchasable", "", true, function(AddItem)
    purchasable:Add(AddItem)
end)
manual:Seperator()

manual:Button("Change Stand (Must have Stand first)", function()
    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
        game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
        if Item ~= nil then
            repeat
                wait()
            until game:GetService("Workspace")[plrName]:FindFirstChild('ForceField') == nil
            if game.Players.LocalPlayer.Backpack:FindFirstChild('Rokakaka Fruit') then -- Check if exist in the backpack and equip
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                    game.Players.LocalPlayer.Backpack["Rokakaka Fruit"])
                repeat
                    wait()
                until game.Players.LocalPlayer.Character:FindFirstChild('Rokakaka Fruit')
                game:GetService("ReplicatedStorage").Events.Event6:InvokeServer()
                repeat
                    wait()
                until game:GetService("Workspace")[plrName]:FindFirstChild('ForceField')
                wait(1)
                if game.Players.LocalPlayer.Character:FindFirstChild(Item) then -- Check if holding and use
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                elseif game.Players.LocalPlayer.Backpack:FindFirstChild(Item) then -- Check if exist in the backpack and equip
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character:FindFirstChild(Item)
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                else
                    Notif("No " .. Item .. " Found!", "Automatic Buy executed")
                    fireclickdetector(game:GetService("Workspace").Purchasable[Item].ClickDetector)
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Backpack:FindFirstChild(Item)
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character:FindFirstChild(Item)
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                end
            elseif game.Players.LocalPlayer.Character:FindFirstChild('Rokakaka Fruit') then -- Check if player holding it and use
                game:GetService("ReplicatedStorage").Events.Event6:InvokeServer()
                repeat
                    wait()
                until game:GetService("Workspace")[plrName]:FindFirstChild('ForceField')
                wait(1)
                if game.Players.LocalPlayer.Character:FindFirstChild(Item) then -- Check if holding and use
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                elseif game.Players.LocalPlayer.Backpack:FindFirstChild(Item) then -- Check if exist in the backpack and equip
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character:FindFirstChild(Item)
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                else
                    Notif("No " .. Item .. " Found!", "Automatic Buy executed")
                    fireclickdetector(game:GetService("Workspace").Purchasable["Rokakaka Fruit"].ClickDetector)
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Backpack:FindFirstChild("Item")
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character:FindFirstChild(Item)
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                end
            else -- Check if item didnt exist then buy
                Notif("No Rokakaka Fruit Found!", "Automatic Buy executed")
                fireclickdetector(game:GetService("Workspace").Purchasable['Rokakaka Fruit'].ClickDetector)
                repeat
                    wait()
                until game.Players.LocalPlayer.Backpack:FindFirstChild('Rokakaka Fruit')
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                    game.Players.LocalPlayer.Backpack['Rokakaka Fruit'])
                repeat
                    wait()
                until game.Players.LocalPlayer.Character:FindFirstChild('Rokakaka Fruit')
                game:GetService("ReplicatedStorage").Events.Event6:InvokeServer()
                repeat
                    wait()
                until game:GetService("Workspace")[plrName]:FindFirstChild('ForceField')
                wait(1)
                if game.Players.LocalPlayer.Character:FindFirstChild(Item) then -- Check if holding and use
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                elseif game.Players.LocalPlayer.Backpack:FindFirstChild(Item) then -- Check if exist in the backpack and equip
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character:FindFirstChild(Item)
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                else
                    Notif("No " .. Item .. " Found!", "Automatic Buy executed")
                    fireclickdetector(game:GetService("Workspace").Purchasable[Item].ClickDetector)
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Backpack:FindFirstChild(Item)
                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
                    repeat
                        wait()
                    until game.Players.LocalPlayer.Character:FindFirstChild(Item)
                    game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
                end
            end
        else
            Notif("ERROR", "Please select Item to Use")
        end
    end
end)

manual:Button("Get Stand (For non-stand)", function()
    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
        game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
        if Item ~= nil then
            fireclickdetector(game:GetService("Workspace").Purchasable[Item].ClickDetector)
            repeat
                wait()
            until game.Players.LocalPlayer.Backpack:FindFirstChild(Item)
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack[Item])
            repeat
                wait()
            until game.Players.LocalPlayer.Character:FindFirstChild(Item)
            game:GetService("ReplicatedStorage").Events.Event4:InvokeServer()
            repeat
                wait()
            until game:GetService("Workspace")[plrName]:FindFirstChild('Stand')
        else
            Notif("ERROR", "Please select Item to Use")
        end
    end
end)

manual:Button("Remove Stand (Must have Stand first)", function()
    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
        game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
        repeat
            wait()
        until game:GetService("Workspace")[plrName]:FindFirstChild('Stand') or
            game:GetService("Workspace")[plrName]:FindFirstChild('StandSuit')
        fireclickdetector(game:GetService("Workspace").Purchasable['Rokakaka Fruit'].ClickDetector)
        repeat
            wait()
        until game.Players.LocalPlayer.Backpack:FindFirstChild('Rokakaka Fruit')
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack['Rokakaka Fruit'])
        repeat
            wait()
        until game.Players.LocalPlayer.Character:FindFirstChild('Rokakaka Fruit')
        game:GetService("ReplicatedStorage").Events.Event6:InvokeServer()
    end
end)

manual:Seperator()

manual:Button("Use Requiem Arrow", function()

    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
        game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
        if game.Players.LocalPlayer.Backpack:FindFirstChild('Requiem Arrow') then -- Check if exist in the backpack and use
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack['Requiem Arrow'])
            repeat
                wait()
            until game.Players.LocalPlayer.Character:FindFirstChild('Requiem Arrow')
            game:GetService("ReplicatedStorage").Events.Event10:InvokeServer()
        elseif game.Players.LocalPlayer.Character:FindFirstChild('Requiem Arrow') then -- Check if player holding it and use
            game:GetService("ReplicatedStorage").Events.Event10:InvokeServer()
        else -- Check if item didnt exist then buy
            Notif("No Requiem Arrow Found!", "Automatic Buy executed.")
            fireclickdetector(game:GetService("Workspace").Purchasable["Requiem Arrow"].ClickDetector)
            repeat
                wait()
            until game.Players.LocalPlayer.Backpack:FindFirstChild('Requiem Arrow')
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack['Requiem Arrow'])
            repeat
                wait()
            until game.Players.LocalPlayer.Character:FindFirstChild('Requiem Arrow')
            game:GetService("ReplicatedStorage").Events.Event10:InvokeServer()
        end
    end

end)

manual:Button("Use Heavenly Diary", function()

    if game.Players.LocalPlayer.Backpack:FindFirstChild('Heavenly Diary') then -- Check if exist in the backpack and use
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack['Heavenly Diary'])
        repeat
            wait()
        until game.Players.LocalPlayer.Character:FindFirstChild('Heavenly Diary')
        game:GetService("ReplicatedStorage").Events.Event7:InvokeServer()
    elseif game.Players.LocalPlayer.Character:FindFirstChild('Heavenly Diary') then -- Check if player holding it and use
        game:GetService("ReplicatedStorage").Events.Event7:InvokeServer()
    else -- Check if item didnt exist then buy
        Notif("No Heavenly Diay Found", "Automatic Buy executed.")
        fireclickdetector(game:GetService("Workspace").Purchasable["Heavenly Diary"].ClickDetector)
        repeat
            wait()
        until game.Players.LocalPlayer.Backpack:FindFirstChild('Heavenly Diary')
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(game.Players.LocalPlayer.Backpack['Heavenly Diary'])
        repeat
            wait()
        until game.Players.LocalPlayer.Character:FindFirstChild('Heavenly Diary')
        game:GetService("ReplicatedStorage").Events.Event7:InvokeServer()
    end

end)

local tgls = serv:Channel("Auto Farm")

tgls:Label(
    "- Script sometimes break if you dies (Re-on to fix)")

tgls:Seperator()

tgls:Toggle("Auto Barrage/Chop/Slice (E)", false, function(ABE)
    getgenv().isOnBarrage = ABE
end)

tgls:Toggle("Level Farm", false, function(AFL)
    getgenv().isOnAutoFarm = AFL
    getgenv().changeNPC = 0

    if isOnAutoFarm == false then

        clip()
        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
            for i, v in pairs(game:GetService("Workspace")[plrName].HumanoidRootPart:GetChildren()) do
                if v:IsA('BodyVelocity') or v:IsA('BodyGyro') then
                    v:Destroy()
                end
            end
        end
    else
        noClip()
    end

    spawn(function()
        while isOnAutoFarm do
            wait()
            if game.Workspace[plrName]:FindFirstChild('HumanoidRootPart') then
                for i, v in pairs(game:GetService("Players").LocalPlayer.PlayerGui.Quest:GetDescendants()) do
                    if v:IsA('TextLabel') and v.Name == '3' then
                        if v.Text:match('You need to be atleast') then
                            haveQuest = false
                        end
                    end
                end
            end

            if game.Workspace[plrName]:FindFirstChild('HumanoidRootPart') then
                if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChildOfClass('Frame') == nil then
                    haveQuest = false
                end
            end

            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
                game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                if currentLevel >= 1 and currentLevel <= 9 then -- THUGQUEST
                    if haveQuest == false then
                        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild('ThugQuest') ==
                                nil then
                                positionPart = game:GetService("Workspace")["Thug Quest LV. 1 - 30"].HumanoidRootPart
                                                   .Position
                                To(positionPart + Vector3.new(0, -7.5, 0))
                                fireclickdetector(game:GetService("Workspace")["Thug Quest LV. 1 - 30"].ClickDetector)
                            end
                        end

                        TARGETMOB = 'Thug'
                        TARGETQUEST = 'ThugQuest'
                    end
                elseif currentLevel >= 10 and currentLevel <= 19 then -- BRUTEQUEST
                    if haveQuest == false then
                        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild('BruteQuest') ==
                                nil then
                                positionPart = game:GetService("Workspace")["Brute Quest LV. 30 - 80"].HumanoidRootPart
                                                   .Position
                                To(positionPart + Vector3.new(0, -7.5, 0))
                                fireclickdetector(game:GetService("Workspace")["Brute Quest LV. 30 - 80"].ClickDetector)
                            end
                        end

                        TARGETMOB = 'Brute'
                        TARGETQUEST = 'BruteQuest'
                    end
                elseif currentLevel >= 20 and currentLevel <= 29 then -- GorillaQuest
                    if haveQuest == false then
                        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                'GorillaQuest') == nil then
                                for i, v in pairs(game.Workspace:GetChildren()) do
                                    if v:IsA('Model') and v:FindFirstChild('YoutubeHungryDino') and
                                        v:FindFirstChild('NPCHumanoid') then
                                        positionPart = v.HumanoidRootPart.Position
                                        To(positionPart + Vector3.new(0, -7.5, 0))
                                        fireclickdetector(v.ClickDetector)
                                    end
                                end
                            end
                        end
                        TARGETMOB = 'Gorilla'
                        TARGETQUEST = 'GorillaQuest'
                    end
                elseif currentLevel >= 30 and currentLevel <= 44 then -- WerewolfQuest
                    if haveQuest == false then
                        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                'WerewolfQuest') == nil then
                                positionPart = game:GetService("Workspace")["Werewolf Quest LV. 150 - 300 "]
                                                   .HumanoidRootPart.Position
                                To(positionPart + Vector3.new(0, -7.5, 0))
                                fireclickdetector(game:GetService("Workspace")["Werewolf Quest LV. 150 - 300 "]
                                                      .ClickDetector)
                            end
                        end
                        TARGETMOB = 'Werewolf'
                        TARGETQUEST = 'WerewolfQuest'
                    end
                elseif currentLevel >= 45 and currentLevel <= 59 then -- ZombieQuest
                    if haveQuest == false then
                        repeat
                            wait()
                            if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                                if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                    'ZombieQuest') == nil then
                                    positionPart = game:GetService("Workspace")["Zombie Quest LV. 300 - 450"]
                                                       .HumanoidRootPart.Position
                                    To(positionPart + Vector3.new(0, -7.5, 0))
                                    fireclickdetector(game:GetService("Workspace")["Zombie Quest LV. 300 - 450"]
                                                          .ClickDetector)
                                end
                            end
                        until game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild('ZombieQuest')
                        TARGETMOB = 'Zombie'
                        TARGETQUEST = 'ZombieQuest'
                    end
                elseif currentLevel >= 60 and currentLevel <= 79 then -- VampireQuest
                    if haveQuest == false then
                        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                            if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                'VampireQuest') == nil then
                                positionPart = game:GetService("Workspace")["Vampire Quest LV. 450 - 650"]
                                                   .HumanoidRootPart.Position
                                To(positionPart + Vector3.new(0, -7.5, 0))
                                fireclickdetector(game:GetService("Workspace")["Vampire Quest LV. 450 - 650"]
                                                      .ClickDetector)
                            end
                        end
                        TARGETMOB = 'Vampire'
                        TARGETQUEST = 'VampireQuest'
                    end
                elseif currentLevel >= 80 and currentLevel <= 100 then -- GolemQuest
                    if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
                        game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then

                        if currentLevel == 100 and isOnAPT then
                            if game:GetService("Workspace")[plrName].Status.StandOut.Value == true then
                                game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Events.SummonStand:InvokeServer()
                            end
                            wait(1)
                            game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Events.Prestige:InvokeServer()
                            repeat
                                wait()
                            until game:GetService("Workspace")[plrName]:FindFirstChild('ForceField')
                            wait(1)
                            repeat
                                wait()
                            until game:GetService("Workspace")[plrName]:FindFirstChild('ForceField') == nil
                            wait(1)
                            if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                                if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                    'ThugQuest') == nil then
                                    positionPart = game:GetService("Workspace")["Thug Quest LV. 1 - 30"]
                                                       .HumanoidRootPart.Position
                                    To(positionPart + Vector3.new(0, -7.5, 0))
                                    fireclickdetector(game:GetService("Workspace")["Thug Quest LV. 1 - 30"]
                                                          .ClickDetector)
                                end
                            end

                            TARGETMOB = 'Thug'
                            TARGETQUEST = 'ThugQuest'
                        else
                            if haveQuest == false then
                                if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                                    if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                        'GolemQuest') == nil then
                                        positionPart = game:GetService("Workspace")["Golem Quest LV. 650 -1000"]
                                                           .HumanoidRootPart.Position
                                        To(positionPart + Vector3.new(0, -7.5, 0))
                                        fireclickdetector(game:GetService("Workspace")["Golem Quest LV. 650 -1000"]
                                                              .ClickDetector)
                                    end
                                end
                                TARGETMOB = 'HamonGolem'
                                TARGETQUEST = 'GolemQuest'
                            end
                        end
                    end
                end

                if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(TARGETQUEST) then
                    if TARGETMOB == "Gorilla" then
                        haveQuest = true
                        if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild('GorillaQuest') then
                            for i, v in pairs(game.Workspace:GetChildren()) do
                                if v:IsA('Model') and v:FindFirstChild('Gorilla') and v:FindFirstChild('Target') then
                                    if v.Name == "Chief Chimp" then
                                    else
                                        if v:FindFirstChild('Humanoid') and v.Humanoid.Health > 0 then
                                            if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') and
                                                game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild(
                                                    'CoreGUI') then
                                                To(v.HumanoidRootPart.Position + Vector3.new(0, -7.5, 0))
                                                if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                                    TARGETQUEST) then
                                                    if AutoBarrage then
                                                        game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Events
                                                            .Barrage:InvokeServer()
                                                    end
                                                end
                                                changeNPC = 0
                                            end

                                            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
                                                game.Workspace:FindFirstChild(plrName)
                                                    :FindFirstChild('HumanoidRootPart') then

                                                if STRS then
                                                    local AddPoint = {
                                                        [1] = "Strength",
                                                        [2] = TotalPoints
                                                    }

                                                    game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Stats.Stats
                                                        .Stats:InvokeServer(unpack(AddPoint))
                                                end
                                            end

                                            repeat
                                                wait()
                                                changeNPC = changeNPC + 1
                                                if changeNPC == 12 then
                                                    print('Changing NPC')
                                                    break
                                                end
                                                if game.Workspace:FindFirstChild(plrName):FindFirstChild(
                                                    'HumanoidRootPart') then

                                                    if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                                        TARGETQUEST) == nil then
                                                        haveQuest = false

                                                    else
                                                        if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild(
                                                            'CoreGUI') then
                                                            if game:GetService("Workspace")[plrName].Status.StandOut
                                                                .Value == false then
                                                                game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI
                                                                    .Events.SummonStand:InvokeServer()
                                                            else
                                                                game.Players.LocalPlayer.Character.HumanoidRootPart
                                                                    .CFrame = v.HumanoidRootPart.CFrame *
                                                                                  CFrame.new(0, -7.5, 0)

                                                                game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI
                                                                    .Events.Punch:InvokeServer()
                                                            end
                                                        end
                                                    end
                                                end
                                            until v.Humanoid.Health == 0 or getgenv().isOnAutoFarm == false or haveQuest ==
                                                false or currentLevel == 100

                                            if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                                                for i, v in pairs(
                                                    game:GetService("Workspace")[plrName].HumanoidRootPart:GetChildren()) do
                                                    if v:IsA('BodyVelocity') then
                                                        v:Destroy()
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    else
                        haveQuest = true
                        for i, v in pairs(game.Workspace:GetChildren()) do

                            if v:IsA('Model') and v.Name == TARGETMOB and v:FindFirstChild('Humanoid') and
                                v.Humanoid.Health > 0 then
                                if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') and
                                    game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') then
                                    To(v.HumanoidRootPart.Position + Vector3.new(0, -7.5, 0))
                                    if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                        TARGETQUEST) then
                                        if isOnBarrage then
                                            game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Events
                                                .Barrage:InvokeServer()
                                        end
                                    end
                                    changeNPC = 0
                                end

                                if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') and
                                    game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then

                                    if STRS then
                                        local AddPoint = {
                                            [1] = "Strength",
                                            [2] = TotalPoints
                                        }

                                        game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Stats.Stats.Stats:InvokeServer(
                                            unpack(AddPoint))
                                    end
                                end

                                repeat
                                    wait()
                                    if currentLevel == 100 and isOnAPT then
                                        break
                                    end
                                    changeNPC = changeNPC + 1
                                    if changeNPC == 12 then
                                        print('Changing NPC')
                                        break
                                    end
                                    if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then

                                        if game:GetService("Players").LocalPlayer.PlayerGui.Quest.Quest:FindFirstChild(
                                            TARGETQUEST) == nil then
                                            haveQuest = false

                                        else
                                            if game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') then
                                                if game:GetService("Workspace")[plrName].Status.StandOut.Value == false then
                                                    game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Events
                                                        .SummonStand:InvokeServer()
                                                else
                                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                                                        v.HumanoidRootPart.CFrame * CFrame.new(0, -7.5, 0)

                                                    game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Events
                                                        .Punch:InvokeServer()
                                                end
                                            end
                                        end
                                    end
                                until v.Humanoid.Health == 0 or getgenv().isOnAutoFarm == false or haveQuest == false

                                if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') then
                                    for i, v in pairs(
                                        game:GetService("Workspace")[plrName].HumanoidRootPart:GetChildren()) do
                                        if v:IsA('BodyVelocity') then
                                            v:Destroy()
                                        end
                                    end
                                end

                            end
                        end
                    end
                end
            end
        end
    end)
end)

tgls:Toggle("Auto Strength (Instant Fill)", false, function(STR)
    getgenv().STRS = STR
end)

tgls:Toggle("Auto Prestige", false, function(APT)
    getgenv().isOnAPT = APT
end)

function noClip()
    Clip = false
    wait(0.1)
    speaker = game.Players.LocalPlayer
    local function NoclipLoop()
        if Clip == false and speaker.Character ~= nil then
            for _, child in pairs(speaker.Character:GetDescendants()) do
                if child:IsA("BasePart") and child.CanCollide == true then
                    child.CanCollide = false
                end
            end
        end
    end
    Noclipping = game:GetService('RunService').Stepped:Connect(NoclipLoop)
end

function clip()
    if Noclipping then
        Noclipping:Disconnect()
    end
    Clip = true
end
spawn(function()
    while true do
        wait()

        if game.Workspace:FindFirstChild(plrName):FindFirstChild('HumanoidRootPart') and
            game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild('CoreGUI') then
            getgenv().Points = string.gsub(game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Stats.Stats
                                               .aSkillPoints.Text, "%D", "")
            getgenv().splitP = Points:split(' ')
            getgenv().splittedP = splitP[1]
            getgenv().TotalPoints = tonumber(splittedP)

            getgenv().LevelNow = string.gsub(game:GetService("Players").LocalPlayer.PlayerGui.CoreGUI.Frame.EXPBAR
                                                 .TextLabel.Text, "%D", "")
            getgenv().split = LevelNow:split(' ')
            getgenv().hehe = split[1]
            getgenv().currentLevel = tonumber(hehe)
        end

    end
end)
